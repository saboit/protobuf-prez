// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: FieldThermometer.proto

public final class FieldThermometer {
  private FieldThermometer() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  public interface MeasuredTemperaturesOrBuilder extends
      // @@protoc_insertion_point(interface_extends:MeasuredTemperatures)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <code>optional int64 fieldThermometerId = 1;</code>
     * @return Whether the fieldThermometerId field is set.
     */
    boolean hasFieldThermometerId();
    /**
     * <code>optional int64 fieldThermometerId = 1;</code>
     * @return The fieldThermometerId.
     */
    long getFieldThermometerId();

    /**
     * <code>optional .MeasuredTemperatures.MeasurementType measurementType = 2;</code>
     * @return Whether the measurementType field is set.
     */
    boolean hasMeasurementType();
    /**
     * <code>optional .MeasuredTemperatures.MeasurementType measurementType = 2;</code>
     * @return The enum numeric value on the wire for measurementType.
     */
    int getMeasurementTypeValue();
    /**
     * <code>optional .MeasuredTemperatures.MeasurementType measurementType = 2;</code>
     * @return The measurementType.
     */
    FieldThermometer.MeasuredTemperatures.MeasurementType getMeasurementType();

    /**
     * <code>repeated float measuredTemperaturesInDegreeCelsius = 3;</code>
     * @return A list containing the measuredTemperaturesInDegreeCelsius.
     */
    java.util.List<java.lang.Float> getMeasuredTemperaturesInDegreeCelsiusList();
    /**
     * <code>repeated float measuredTemperaturesInDegreeCelsius = 3;</code>
     * @return The count of measuredTemperaturesInDegreeCelsius.
     */
    int getMeasuredTemperaturesInDegreeCelsiusCount();
    /**
     * <code>repeated float measuredTemperaturesInDegreeCelsius = 3;</code>
     * @param index The index of the element to return.
     * @return The measuredTemperaturesInDegreeCelsius at the given index.
     */
    float getMeasuredTemperaturesInDegreeCelsius(int index);

    /**
     * <code>optional .MeasuredTemperatures.DeviceError lastRecordedDeviceError = 4;</code>
     * @return Whether the lastRecordedDeviceError field is set.
     */
    boolean hasLastRecordedDeviceError();
    /**
     * <code>optional .MeasuredTemperatures.DeviceError lastRecordedDeviceError = 4;</code>
     * @return The lastRecordedDeviceError.
     */
    FieldThermometer.MeasuredTemperatures.DeviceError getLastRecordedDeviceError();
    /**
     * <code>optional .MeasuredTemperatures.DeviceError lastRecordedDeviceError = 4;</code>
     */
    FieldThermometer.MeasuredTemperatures.DeviceErrorOrBuilder getLastRecordedDeviceErrorOrBuilder();
  }
  /**
   * Protobuf type {@code MeasuredTemperatures}
   */
  public static final class MeasuredTemperatures extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:MeasuredTemperatures)
      MeasuredTemperaturesOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use MeasuredTemperatures.newBuilder() to construct.
    private MeasuredTemperatures(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private MeasuredTemperatures() {
      measurementType_ = 0;
      measuredTemperaturesInDegreeCelsius_ = emptyFloatList();
    }

    @java.lang.Override
    @SuppressWarnings({"unused"})
    protected java.lang.Object newInstance(
        UnusedPrivateParameter unused) {
      return new MeasuredTemperatures();
    }

    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return FieldThermometer.internal_static_MeasuredTemperatures_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return FieldThermometer.internal_static_MeasuredTemperatures_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              FieldThermometer.MeasuredTemperatures.class, FieldThermometer.MeasuredTemperatures.Builder.class);
    }

    /**
     * Protobuf enum {@code MeasuredTemperatures.MeasurementType}
     */
    public enum MeasurementType
        implements com.google.protobuf.ProtocolMessageEnum {
      /**
       * <code>PERIODIC = 0;</code>
       */
      PERIODIC(0),
      /**
       * <code>REQUESTED = 1;</code>
       */
      REQUESTED(1),
      /**
       * <code>EXTREMITY = 2;</code>
       */
      EXTREMITY(2),
      UNRECOGNIZED(-1),
      ;

      /**
       * <code>PERIODIC = 0;</code>
       */
      public static final int PERIODIC_VALUE = 0;
      /**
       * <code>REQUESTED = 1;</code>
       */
      public static final int REQUESTED_VALUE = 1;
      /**
       * <code>EXTREMITY = 2;</code>
       */
      public static final int EXTREMITY_VALUE = 2;


      public final int getNumber() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalArgumentException(
              "Can't get the number of an unknown enum value.");
        }
        return value;
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       * @deprecated Use {@link #forNumber(int)} instead.
       */
      @java.lang.Deprecated
      public static MeasurementType valueOf(int value) {
        return forNumber(value);
      }

      /**
       * @param value The numeric wire value of the corresponding enum entry.
       * @return The enum associated with the given numeric wire value.
       */
      public static MeasurementType forNumber(int value) {
        switch (value) {
          case 0: return PERIODIC;
          case 1: return REQUESTED;
          case 2: return EXTREMITY;
          default: return null;
        }
      }

      public static com.google.protobuf.Internal.EnumLiteMap<MeasurementType>
          internalGetValueMap() {
        return internalValueMap;
      }
      private static final com.google.protobuf.Internal.EnumLiteMap<
          MeasurementType> internalValueMap =
            new com.google.protobuf.Internal.EnumLiteMap<MeasurementType>() {
              public MeasurementType findValueByNumber(int number) {
                return MeasurementType.forNumber(number);
              }
            };

      public final com.google.protobuf.Descriptors.EnumValueDescriptor
          getValueDescriptor() {
        if (this == UNRECOGNIZED) {
          throw new java.lang.IllegalStateException(
              "Can't get the descriptor of an unrecognized enum value.");
        }
        return getDescriptor().getValues().get(ordinal());
      }
      public final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptorForType() {
        return getDescriptor();
      }
      public static final com.google.protobuf.Descriptors.EnumDescriptor
          getDescriptor() {
        return FieldThermometer.MeasuredTemperatures.getDescriptor().getEnumTypes().get(0);
      }

      private static final MeasurementType[] VALUES = values();

      public static MeasurementType valueOf(
          com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
        if (desc.getType() != getDescriptor()) {
          throw new java.lang.IllegalArgumentException(
            "EnumValueDescriptor is not for this type.");
        }
        if (desc.getIndex() == -1) {
          return UNRECOGNIZED;
        }
        return VALUES[desc.getIndex()];
      }

      private final int value;

      private MeasurementType(int value) {
        this.value = value;
      }

      // @@protoc_insertion_point(enum_scope:MeasuredTemperatures.MeasurementType)
    }

    public interface DeviceErrorOrBuilder extends
        // @@protoc_insertion_point(interface_extends:MeasuredTemperatures.DeviceError)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <code>optional string message = 1;</code>
       * @return Whether the message field is set.
       */
      boolean hasMessage();
      /**
       * <code>optional string message = 1;</code>
       * @return The message.
       */
      java.lang.String getMessage();
      /**
       * <code>optional string message = 1;</code>
       * @return The bytes for message.
       */
      com.google.protobuf.ByteString
          getMessageBytes();
    }
    /**
     * Protobuf type {@code MeasuredTemperatures.DeviceError}
     */
    public static final class DeviceError extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:MeasuredTemperatures.DeviceError)
        DeviceErrorOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use DeviceError.newBuilder() to construct.
      private DeviceError(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private DeviceError() {
        message_ = "";
      }

      @java.lang.Override
      @SuppressWarnings({"unused"})
      protected java.lang.Object newInstance(
          UnusedPrivateParameter unused) {
        return new DeviceError();
      }

      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FieldThermometer.internal_static_MeasuredTemperatures_DeviceError_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FieldThermometer.internal_static_MeasuredTemperatures_DeviceError_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FieldThermometer.MeasuredTemperatures.DeviceError.class, FieldThermometer.MeasuredTemperatures.DeviceError.Builder.class);
      }

      private int bitField0_;
      public static final int MESSAGE_FIELD_NUMBER = 1;
      @SuppressWarnings("serial")
      private volatile java.lang.Object message_ = "";
      /**
       * <code>optional string message = 1;</code>
       * @return Whether the message field is set.
       */
      @java.lang.Override
      public boolean hasMessage() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional string message = 1;</code>
       * @return The message.
       */
      @java.lang.Override
      public java.lang.String getMessage() {
        java.lang.Object ref = message_;
        if (ref instanceof java.lang.String) {
          return (java.lang.String) ref;
        } else {
          com.google.protobuf.ByteString bs = 
              (com.google.protobuf.ByteString) ref;
          java.lang.String s = bs.toStringUtf8();
          message_ = s;
          return s;
        }
      }
      /**
       * <code>optional string message = 1;</code>
       * @return The bytes for message.
       */
      @java.lang.Override
      public com.google.protobuf.ByteString
          getMessageBytes() {
        java.lang.Object ref = message_;
        if (ref instanceof java.lang.String) {
          com.google.protobuf.ByteString b = 
              com.google.protobuf.ByteString.copyFromUtf8(
                  (java.lang.String) ref);
          message_ = b;
          return b;
        } else {
          return (com.google.protobuf.ByteString) ref;
        }
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (((bitField0_ & 0x00000001) != 0)) {
          com.google.protobuf.GeneratedMessageV3.writeString(output, 1, message_);
        }
        getUnknownFields().writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (((bitField0_ & 0x00000001) != 0)) {
          size += com.google.protobuf.GeneratedMessageV3.computeStringSize(1, message_);
        }
        size += getUnknownFields().getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof FieldThermometer.MeasuredTemperatures.DeviceError)) {
          return super.equals(obj);
        }
        FieldThermometer.MeasuredTemperatures.DeviceError other = (FieldThermometer.MeasuredTemperatures.DeviceError) obj;

        if (hasMessage() != other.hasMessage()) return false;
        if (hasMessage()) {
          if (!getMessage()
              .equals(other.getMessage())) return false;
        }
        if (!getUnknownFields().equals(other.getUnknownFields())) return false;
        return true;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        if (hasMessage()) {
          hash = (37 * hash) + MESSAGE_FIELD_NUMBER;
          hash = (53 * hash) + getMessage().hashCode();
        }
        hash = (29 * hash) + getUnknownFields().hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static FieldThermometer.MeasuredTemperatures.DeviceError parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static FieldThermometer.MeasuredTemperatures.DeviceError parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static FieldThermometer.MeasuredTemperatures.DeviceError parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static FieldThermometer.MeasuredTemperatures.DeviceError parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static FieldThermometer.MeasuredTemperatures.DeviceError parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static FieldThermometer.MeasuredTemperatures.DeviceError parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static FieldThermometer.MeasuredTemperatures.DeviceError parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static FieldThermometer.MeasuredTemperatures.DeviceError parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      public static FieldThermometer.MeasuredTemperatures.DeviceError parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }

      public static FieldThermometer.MeasuredTemperatures.DeviceError parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static FieldThermometer.MeasuredTemperatures.DeviceError parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static FieldThermometer.MeasuredTemperatures.DeviceError parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(FieldThermometer.MeasuredTemperatures.DeviceError prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * Protobuf type {@code MeasuredTemperatures.DeviceError}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:MeasuredTemperatures.DeviceError)
          FieldThermometer.MeasuredTemperatures.DeviceErrorOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return FieldThermometer.internal_static_MeasuredTemperatures_DeviceError_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return FieldThermometer.internal_static_MeasuredTemperatures_DeviceError_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  FieldThermometer.MeasuredTemperatures.DeviceError.class, FieldThermometer.MeasuredTemperatures.DeviceError.Builder.class);
        }

        // Construct using FieldThermometer.MeasuredTemperatures.DeviceError.newBuilder()
        private Builder() {

        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);

        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          bitField0_ = 0;
          message_ = "";
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return FieldThermometer.internal_static_MeasuredTemperatures_DeviceError_descriptor;
        }

        @java.lang.Override
        public FieldThermometer.MeasuredTemperatures.DeviceError getDefaultInstanceForType() {
          return FieldThermometer.MeasuredTemperatures.DeviceError.getDefaultInstance();
        }

        @java.lang.Override
        public FieldThermometer.MeasuredTemperatures.DeviceError build() {
          FieldThermometer.MeasuredTemperatures.DeviceError result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public FieldThermometer.MeasuredTemperatures.DeviceError buildPartial() {
          FieldThermometer.MeasuredTemperatures.DeviceError result = new FieldThermometer.MeasuredTemperatures.DeviceError(this);
          if (bitField0_ != 0) { buildPartial0(result); }
          onBuilt();
          return result;
        }

        private void buildPartial0(FieldThermometer.MeasuredTemperatures.DeviceError result) {
          int from_bitField0_ = bitField0_;
          int to_bitField0_ = 0;
          if (((from_bitField0_ & 0x00000001) != 0)) {
            result.message_ = message_;
            to_bitField0_ |= 0x00000001;
          }
          result.bitField0_ |= to_bitField0_;
        }

        @java.lang.Override
        public Builder clone() {
          return super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof FieldThermometer.MeasuredTemperatures.DeviceError) {
            return mergeFrom((FieldThermometer.MeasuredTemperatures.DeviceError)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(FieldThermometer.MeasuredTemperatures.DeviceError other) {
          if (other == FieldThermometer.MeasuredTemperatures.DeviceError.getDefaultInstance()) return this;
          if (other.hasMessage()) {
            message_ = other.message_;
            bitField0_ |= 0x00000001;
            onChanged();
          }
          this.mergeUnknownFields(other.getUnknownFields());
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  message_ = input.readStringRequireUtf8();
                  bitField0_ |= 0x00000001;
                  break;
                } // case 10
                default: {
                  if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                    done = true; // was an endgroup tag
                  }
                  break;
                } // default:
              } // switch (tag)
            } // while (!done)
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.unwrapIOException();
          } finally {
            onChanged();
          } // finally
          return this;
        }
        private int bitField0_;

        private java.lang.Object message_ = "";
        /**
         * <code>optional string message = 1;</code>
         * @return Whether the message field is set.
         */
        public boolean hasMessage() {
          return ((bitField0_ & 0x00000001) != 0);
        }
        /**
         * <code>optional string message = 1;</code>
         * @return The message.
         */
        public java.lang.String getMessage() {
          java.lang.Object ref = message_;
          if (!(ref instanceof java.lang.String)) {
            com.google.protobuf.ByteString bs =
                (com.google.protobuf.ByteString) ref;
            java.lang.String s = bs.toStringUtf8();
            message_ = s;
            return s;
          } else {
            return (java.lang.String) ref;
          }
        }
        /**
         * <code>optional string message = 1;</code>
         * @return The bytes for message.
         */
        public com.google.protobuf.ByteString
            getMessageBytes() {
          java.lang.Object ref = message_;
          if (ref instanceof String) {
            com.google.protobuf.ByteString b = 
                com.google.protobuf.ByteString.copyFromUtf8(
                    (java.lang.String) ref);
            message_ = b;
            return b;
          } else {
            return (com.google.protobuf.ByteString) ref;
          }
        }
        /**
         * <code>optional string message = 1;</code>
         * @param value The message to set.
         * @return This builder for chaining.
         */
        public Builder setMessage(
            java.lang.String value) {
          if (value == null) { throw new NullPointerException(); }
          message_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        /**
         * <code>optional string message = 1;</code>
         * @return This builder for chaining.
         */
        public Builder clearMessage() {
          message_ = getDefaultInstance().getMessage();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
          return this;
        }
        /**
         * <code>optional string message = 1;</code>
         * @param value The bytes for message to set.
         * @return This builder for chaining.
         */
        public Builder setMessageBytes(
            com.google.protobuf.ByteString value) {
          if (value == null) { throw new NullPointerException(); }
          checkByteStringIsUtf8(value);
          message_ = value;
          bitField0_ |= 0x00000001;
          onChanged();
          return this;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFields(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:MeasuredTemperatures.DeviceError)
      }

      // @@protoc_insertion_point(class_scope:MeasuredTemperatures.DeviceError)
      private static final FieldThermometer.MeasuredTemperatures.DeviceError DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new FieldThermometer.MeasuredTemperatures.DeviceError();
      }

      public static FieldThermometer.MeasuredTemperatures.DeviceError getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<DeviceError>
          PARSER = new com.google.protobuf.AbstractParser<DeviceError>() {
        @java.lang.Override
        public DeviceError parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          Builder builder = newBuilder();
          try {
            builder.mergeFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(builder.buildPartial());
          } catch (com.google.protobuf.UninitializedMessageException e) {
            throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(e)
                .setUnfinishedMessage(builder.buildPartial());
          }
          return builder.buildPartial();
        }
      };

      public static com.google.protobuf.Parser<DeviceError> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<DeviceError> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public FieldThermometer.MeasuredTemperatures.DeviceError getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    private int bitField0_;
    public static final int FIELDTHERMOMETERID_FIELD_NUMBER = 1;
    private long fieldThermometerId_ = 0L;
    /**
     * <code>optional int64 fieldThermometerId = 1;</code>
     * @return Whether the fieldThermometerId field is set.
     */
    @java.lang.Override
    public boolean hasFieldThermometerId() {
      return ((bitField0_ & 0x00000001) != 0);
    }
    /**
     * <code>optional int64 fieldThermometerId = 1;</code>
     * @return The fieldThermometerId.
     */
    @java.lang.Override
    public long getFieldThermometerId() {
      return fieldThermometerId_;
    }

    public static final int MEASUREMENTTYPE_FIELD_NUMBER = 2;
    private int measurementType_ = 0;
    /**
     * <code>optional .MeasuredTemperatures.MeasurementType measurementType = 2;</code>
     * @return Whether the measurementType field is set.
     */
    @java.lang.Override public boolean hasMeasurementType() {
      return ((bitField0_ & 0x00000002) != 0);
    }
    /**
     * <code>optional .MeasuredTemperatures.MeasurementType measurementType = 2;</code>
     * @return The enum numeric value on the wire for measurementType.
     */
    @java.lang.Override public int getMeasurementTypeValue() {
      return measurementType_;
    }
    /**
     * <code>optional .MeasuredTemperatures.MeasurementType measurementType = 2;</code>
     * @return The measurementType.
     */
    @java.lang.Override public FieldThermometer.MeasuredTemperatures.MeasurementType getMeasurementType() {
      FieldThermometer.MeasuredTemperatures.MeasurementType result = FieldThermometer.MeasuredTemperatures.MeasurementType.forNumber(measurementType_);
      return result == null ? FieldThermometer.MeasuredTemperatures.MeasurementType.UNRECOGNIZED : result;
    }

    public static final int MEASUREDTEMPERATURESINDEGREECELSIUS_FIELD_NUMBER = 3;
    @SuppressWarnings("serial")
    private com.google.protobuf.Internal.FloatList measuredTemperaturesInDegreeCelsius_;
    /**
     * <code>repeated float measuredTemperaturesInDegreeCelsius = 3;</code>
     * @return A list containing the measuredTemperaturesInDegreeCelsius.
     */
    @java.lang.Override
    public java.util.List<java.lang.Float>
        getMeasuredTemperaturesInDegreeCelsiusList() {
      return measuredTemperaturesInDegreeCelsius_;
    }
    /**
     * <code>repeated float measuredTemperaturesInDegreeCelsius = 3;</code>
     * @return The count of measuredTemperaturesInDegreeCelsius.
     */
    public int getMeasuredTemperaturesInDegreeCelsiusCount() {
      return measuredTemperaturesInDegreeCelsius_.size();
    }
    /**
     * <code>repeated float measuredTemperaturesInDegreeCelsius = 3;</code>
     * @param index The index of the element to return.
     * @return The measuredTemperaturesInDegreeCelsius at the given index.
     */
    public float getMeasuredTemperaturesInDegreeCelsius(int index) {
      return measuredTemperaturesInDegreeCelsius_.getFloat(index);
    }
    private int measuredTemperaturesInDegreeCelsiusMemoizedSerializedSize = -1;

    public static final int LASTRECORDEDDEVICEERROR_FIELD_NUMBER = 4;
    private FieldThermometer.MeasuredTemperatures.DeviceError lastRecordedDeviceError_;
    /**
     * <code>optional .MeasuredTemperatures.DeviceError lastRecordedDeviceError = 4;</code>
     * @return Whether the lastRecordedDeviceError field is set.
     */
    @java.lang.Override
    public boolean hasLastRecordedDeviceError() {
      return ((bitField0_ & 0x00000004) != 0);
    }
    /**
     * <code>optional .MeasuredTemperatures.DeviceError lastRecordedDeviceError = 4;</code>
     * @return The lastRecordedDeviceError.
     */
    @java.lang.Override
    public FieldThermometer.MeasuredTemperatures.DeviceError getLastRecordedDeviceError() {
      return lastRecordedDeviceError_ == null ? FieldThermometer.MeasuredTemperatures.DeviceError.getDefaultInstance() : lastRecordedDeviceError_;
    }
    /**
     * <code>optional .MeasuredTemperatures.DeviceError lastRecordedDeviceError = 4;</code>
     */
    @java.lang.Override
    public FieldThermometer.MeasuredTemperatures.DeviceErrorOrBuilder getLastRecordedDeviceErrorOrBuilder() {
      return lastRecordedDeviceError_ == null ? FieldThermometer.MeasuredTemperatures.DeviceError.getDefaultInstance() : lastRecordedDeviceError_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      getSerializedSize();
      if (((bitField0_ & 0x00000001) != 0)) {
        output.writeInt64(1, fieldThermometerId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        output.writeEnum(2, measurementType_);
      }
      if (getMeasuredTemperaturesInDegreeCelsiusList().size() > 0) {
        output.writeUInt32NoTag(26);
        output.writeUInt32NoTag(measuredTemperaturesInDegreeCelsiusMemoizedSerializedSize);
      }
      for (int i = 0; i < measuredTemperaturesInDegreeCelsius_.size(); i++) {
        output.writeFloatNoTag(measuredTemperaturesInDegreeCelsius_.getFloat(i));
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        output.writeMessage(4, getLastRecordedDeviceError());
      }
      getUnknownFields().writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (((bitField0_ & 0x00000001) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeInt64Size(1, fieldThermometerId_);
      }
      if (((bitField0_ & 0x00000002) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeEnumSize(2, measurementType_);
      }
      {
        int dataSize = 0;
        dataSize = 4 * getMeasuredTemperaturesInDegreeCelsiusList().size();
        size += dataSize;
        if (!getMeasuredTemperaturesInDegreeCelsiusList().isEmpty()) {
          size += 1;
          size += com.google.protobuf.CodedOutputStream
              .computeInt32SizeNoTag(dataSize);
        }
        measuredTemperaturesInDegreeCelsiusMemoizedSerializedSize = dataSize;
      }
      if (((bitField0_ & 0x00000004) != 0)) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(4, getLastRecordedDeviceError());
      }
      size += getUnknownFields().getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof FieldThermometer.MeasuredTemperatures)) {
        return super.equals(obj);
      }
      FieldThermometer.MeasuredTemperatures other = (FieldThermometer.MeasuredTemperatures) obj;

      if (hasFieldThermometerId() != other.hasFieldThermometerId()) return false;
      if (hasFieldThermometerId()) {
        if (getFieldThermometerId()
            != other.getFieldThermometerId()) return false;
      }
      if (hasMeasurementType() != other.hasMeasurementType()) return false;
      if (hasMeasurementType()) {
        if (measurementType_ != other.measurementType_) return false;
      }
      if (!getMeasuredTemperaturesInDegreeCelsiusList()
          .equals(other.getMeasuredTemperaturesInDegreeCelsiusList())) return false;
      if (hasLastRecordedDeviceError() != other.hasLastRecordedDeviceError()) return false;
      if (hasLastRecordedDeviceError()) {
        if (!getLastRecordedDeviceError()
            .equals(other.getLastRecordedDeviceError())) return false;
      }
      if (!getUnknownFields().equals(other.getUnknownFields())) return false;
      return true;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasFieldThermometerId()) {
        hash = (37 * hash) + FIELDTHERMOMETERID_FIELD_NUMBER;
        hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
            getFieldThermometerId());
      }
      if (hasMeasurementType()) {
        hash = (37 * hash) + MEASUREMENTTYPE_FIELD_NUMBER;
        hash = (53 * hash) + measurementType_;
      }
      if (getMeasuredTemperaturesInDegreeCelsiusCount() > 0) {
        hash = (37 * hash) + MEASUREDTEMPERATURESINDEGREECELSIUS_FIELD_NUMBER;
        hash = (53 * hash) + getMeasuredTemperaturesInDegreeCelsiusList().hashCode();
      }
      if (hasLastRecordedDeviceError()) {
        hash = (37 * hash) + LASTRECORDEDDEVICEERROR_FIELD_NUMBER;
        hash = (53 * hash) + getLastRecordedDeviceError().hashCode();
      }
      hash = (29 * hash) + getUnknownFields().hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static FieldThermometer.MeasuredTemperatures parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FieldThermometer.MeasuredTemperatures parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FieldThermometer.MeasuredTemperatures parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FieldThermometer.MeasuredTemperatures parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FieldThermometer.MeasuredTemperatures parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static FieldThermometer.MeasuredTemperatures parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static FieldThermometer.MeasuredTemperatures parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static FieldThermometer.MeasuredTemperatures parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    public static FieldThermometer.MeasuredTemperatures parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }

    public static FieldThermometer.MeasuredTemperatures parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static FieldThermometer.MeasuredTemperatures parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static FieldThermometer.MeasuredTemperatures parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(FieldThermometer.MeasuredTemperatures prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * Protobuf type {@code MeasuredTemperatures}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:MeasuredTemperatures)
        FieldThermometer.MeasuredTemperaturesOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return FieldThermometer.internal_static_MeasuredTemperatures_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return FieldThermometer.internal_static_MeasuredTemperatures_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                FieldThermometer.MeasuredTemperatures.class, FieldThermometer.MeasuredTemperatures.Builder.class);
      }

      // Construct using FieldThermometer.MeasuredTemperatures.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getLastRecordedDeviceErrorFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        bitField0_ = 0;
        fieldThermometerId_ = 0L;
        measurementType_ = 0;
        measuredTemperaturesInDegreeCelsius_ = emptyFloatList();
        lastRecordedDeviceError_ = null;
        if (lastRecordedDeviceErrorBuilder_ != null) {
          lastRecordedDeviceErrorBuilder_.dispose();
          lastRecordedDeviceErrorBuilder_ = null;
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return FieldThermometer.internal_static_MeasuredTemperatures_descriptor;
      }

      @java.lang.Override
      public FieldThermometer.MeasuredTemperatures getDefaultInstanceForType() {
        return FieldThermometer.MeasuredTemperatures.getDefaultInstance();
      }

      @java.lang.Override
      public FieldThermometer.MeasuredTemperatures build() {
        FieldThermometer.MeasuredTemperatures result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public FieldThermometer.MeasuredTemperatures buildPartial() {
        FieldThermometer.MeasuredTemperatures result = new FieldThermometer.MeasuredTemperatures(this);
        buildPartialRepeatedFields(result);
        if (bitField0_ != 0) { buildPartial0(result); }
        onBuilt();
        return result;
      }

      private void buildPartialRepeatedFields(FieldThermometer.MeasuredTemperatures result) {
        if (((bitField0_ & 0x00000004) != 0)) {
          measuredTemperaturesInDegreeCelsius_.makeImmutable();
          bitField0_ = (bitField0_ & ~0x00000004);
        }
        result.measuredTemperaturesInDegreeCelsius_ = measuredTemperaturesInDegreeCelsius_;
      }

      private void buildPartial0(FieldThermometer.MeasuredTemperatures result) {
        int from_bitField0_ = bitField0_;
        int to_bitField0_ = 0;
        if (((from_bitField0_ & 0x00000001) != 0)) {
          result.fieldThermometerId_ = fieldThermometerId_;
          to_bitField0_ |= 0x00000001;
        }
        if (((from_bitField0_ & 0x00000002) != 0)) {
          result.measurementType_ = measurementType_;
          to_bitField0_ |= 0x00000002;
        }
        if (((from_bitField0_ & 0x00000008) != 0)) {
          result.lastRecordedDeviceError_ = lastRecordedDeviceErrorBuilder_ == null
              ? lastRecordedDeviceError_
              : lastRecordedDeviceErrorBuilder_.build();
          to_bitField0_ |= 0x00000004;
        }
        result.bitField0_ |= to_bitField0_;
      }

      @java.lang.Override
      public Builder clone() {
        return super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof FieldThermometer.MeasuredTemperatures) {
          return mergeFrom((FieldThermometer.MeasuredTemperatures)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(FieldThermometer.MeasuredTemperatures other) {
        if (other == FieldThermometer.MeasuredTemperatures.getDefaultInstance()) return this;
        if (other.hasFieldThermometerId()) {
          setFieldThermometerId(other.getFieldThermometerId());
        }
        if (other.hasMeasurementType()) {
          setMeasurementType(other.getMeasurementType());
        }
        if (!other.measuredTemperaturesInDegreeCelsius_.isEmpty()) {
          if (measuredTemperaturesInDegreeCelsius_.isEmpty()) {
            measuredTemperaturesInDegreeCelsius_ = other.measuredTemperaturesInDegreeCelsius_;
            bitField0_ = (bitField0_ & ~0x00000004);
          } else {
            ensureMeasuredTemperaturesInDegreeCelsiusIsMutable();
            measuredTemperaturesInDegreeCelsius_.addAll(other.measuredTemperaturesInDegreeCelsius_);
          }
          onChanged();
        }
        if (other.hasLastRecordedDeviceError()) {
          mergeLastRecordedDeviceError(other.getLastRecordedDeviceError());
        }
        this.mergeUnknownFields(other.getUnknownFields());
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 8: {
                fieldThermometerId_ = input.readInt64();
                bitField0_ |= 0x00000001;
                break;
              } // case 8
              case 16: {
                measurementType_ = input.readEnum();
                bitField0_ |= 0x00000002;
                break;
              } // case 16
              case 29: {
                float v = input.readFloat();
                ensureMeasuredTemperaturesInDegreeCelsiusIsMutable();
                measuredTemperaturesInDegreeCelsius_.addFloat(v);
                break;
              } // case 29
              case 26: {
                int length = input.readRawVarint32();
                int limit = input.pushLimit(length);
                ensureMeasuredTemperaturesInDegreeCelsiusIsMutable();
                while (input.getBytesUntilLimit() > 0) {
                  measuredTemperaturesInDegreeCelsius_.addFloat(input.readFloat());
                }
                input.popLimit(limit);
                break;
              } // case 26
              case 34: {
                input.readMessage(
                    getLastRecordedDeviceErrorFieldBuilder().getBuilder(),
                    extensionRegistry);
                bitField0_ |= 0x00000008;
                break;
              } // case 34
              default: {
                if (!super.parseUnknownField(input, extensionRegistry, tag)) {
                  done = true; // was an endgroup tag
                }
                break;
              } // default:
            } // switch (tag)
          } // while (!done)
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.unwrapIOException();
        } finally {
          onChanged();
        } // finally
        return this;
      }
      private int bitField0_;

      private long fieldThermometerId_ ;
      /**
       * <code>optional int64 fieldThermometerId = 1;</code>
       * @return Whether the fieldThermometerId field is set.
       */
      @java.lang.Override
      public boolean hasFieldThermometerId() {
        return ((bitField0_ & 0x00000001) != 0);
      }
      /**
       * <code>optional int64 fieldThermometerId = 1;</code>
       * @return The fieldThermometerId.
       */
      @java.lang.Override
      public long getFieldThermometerId() {
        return fieldThermometerId_;
      }
      /**
       * <code>optional int64 fieldThermometerId = 1;</code>
       * @param value The fieldThermometerId to set.
       * @return This builder for chaining.
       */
      public Builder setFieldThermometerId(long value) {

        fieldThermometerId_ = value;
        bitField0_ |= 0x00000001;
        onChanged();
        return this;
      }
      /**
       * <code>optional int64 fieldThermometerId = 1;</code>
       * @return This builder for chaining.
       */
      public Builder clearFieldThermometerId() {
        bitField0_ = (bitField0_ & ~0x00000001);
        fieldThermometerId_ = 0L;
        onChanged();
        return this;
      }

      private int measurementType_ = 0;
      /**
       * <code>optional .MeasuredTemperatures.MeasurementType measurementType = 2;</code>
       * @return Whether the measurementType field is set.
       */
      @java.lang.Override public boolean hasMeasurementType() {
        return ((bitField0_ & 0x00000002) != 0);
      }
      /**
       * <code>optional .MeasuredTemperatures.MeasurementType measurementType = 2;</code>
       * @return The enum numeric value on the wire for measurementType.
       */
      @java.lang.Override public int getMeasurementTypeValue() {
        return measurementType_;
      }
      /**
       * <code>optional .MeasuredTemperatures.MeasurementType measurementType = 2;</code>
       * @param value The enum numeric value on the wire for measurementType to set.
       * @return This builder for chaining.
       */
      public Builder setMeasurementTypeValue(int value) {
        measurementType_ = value;
        bitField0_ |= 0x00000002;
        onChanged();
        return this;
      }
      /**
       * <code>optional .MeasuredTemperatures.MeasurementType measurementType = 2;</code>
       * @return The measurementType.
       */
      @java.lang.Override
      public FieldThermometer.MeasuredTemperatures.MeasurementType getMeasurementType() {
        FieldThermometer.MeasuredTemperatures.MeasurementType result = FieldThermometer.MeasuredTemperatures.MeasurementType.forNumber(measurementType_);
        return result == null ? FieldThermometer.MeasuredTemperatures.MeasurementType.UNRECOGNIZED : result;
      }
      /**
       * <code>optional .MeasuredTemperatures.MeasurementType measurementType = 2;</code>
       * @param value The measurementType to set.
       * @return This builder for chaining.
       */
      public Builder setMeasurementType(FieldThermometer.MeasuredTemperatures.MeasurementType value) {
        if (value == null) {
          throw new NullPointerException();
        }
        bitField0_ |= 0x00000002;
        measurementType_ = value.getNumber();
        onChanged();
        return this;
      }
      /**
       * <code>optional .MeasuredTemperatures.MeasurementType measurementType = 2;</code>
       * @return This builder for chaining.
       */
      public Builder clearMeasurementType() {
        bitField0_ = (bitField0_ & ~0x00000002);
        measurementType_ = 0;
        onChanged();
        return this;
      }

      private com.google.protobuf.Internal.FloatList measuredTemperaturesInDegreeCelsius_ = emptyFloatList();
      private void ensureMeasuredTemperaturesInDegreeCelsiusIsMutable() {
        if (!((bitField0_ & 0x00000004) != 0)) {
          measuredTemperaturesInDegreeCelsius_ = mutableCopy(measuredTemperaturesInDegreeCelsius_);
          bitField0_ |= 0x00000004;
        }
      }
      /**
       * <code>repeated float measuredTemperaturesInDegreeCelsius = 3;</code>
       * @return A list containing the measuredTemperaturesInDegreeCelsius.
       */
      public java.util.List<java.lang.Float>
          getMeasuredTemperaturesInDegreeCelsiusList() {
        return ((bitField0_ & 0x00000004) != 0) ?
                 java.util.Collections.unmodifiableList(measuredTemperaturesInDegreeCelsius_) : measuredTemperaturesInDegreeCelsius_;
      }
      /**
       * <code>repeated float measuredTemperaturesInDegreeCelsius = 3;</code>
       * @return The count of measuredTemperaturesInDegreeCelsius.
       */
      public int getMeasuredTemperaturesInDegreeCelsiusCount() {
        return measuredTemperaturesInDegreeCelsius_.size();
      }
      /**
       * <code>repeated float measuredTemperaturesInDegreeCelsius = 3;</code>
       * @param index The index of the element to return.
       * @return The measuredTemperaturesInDegreeCelsius at the given index.
       */
      public float getMeasuredTemperaturesInDegreeCelsius(int index) {
        return measuredTemperaturesInDegreeCelsius_.getFloat(index);
      }
      /**
       * <code>repeated float measuredTemperaturesInDegreeCelsius = 3;</code>
       * @param index The index to set the value at.
       * @param value The measuredTemperaturesInDegreeCelsius to set.
       * @return This builder for chaining.
       */
      public Builder setMeasuredTemperaturesInDegreeCelsius(
          int index, float value) {

        ensureMeasuredTemperaturesInDegreeCelsiusIsMutable();
        measuredTemperaturesInDegreeCelsius_.setFloat(index, value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float measuredTemperaturesInDegreeCelsius = 3;</code>
       * @param value The measuredTemperaturesInDegreeCelsius to add.
       * @return This builder for chaining.
       */
      public Builder addMeasuredTemperaturesInDegreeCelsius(float value) {

        ensureMeasuredTemperaturesInDegreeCelsiusIsMutable();
        measuredTemperaturesInDegreeCelsius_.addFloat(value);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float measuredTemperaturesInDegreeCelsius = 3;</code>
       * @param values The measuredTemperaturesInDegreeCelsius to add.
       * @return This builder for chaining.
       */
      public Builder addAllMeasuredTemperaturesInDegreeCelsius(
          java.lang.Iterable<? extends java.lang.Float> values) {
        ensureMeasuredTemperaturesInDegreeCelsiusIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, measuredTemperaturesInDegreeCelsius_);
        onChanged();
        return this;
      }
      /**
       * <code>repeated float measuredTemperaturesInDegreeCelsius = 3;</code>
       * @return This builder for chaining.
       */
      public Builder clearMeasuredTemperaturesInDegreeCelsius() {
        measuredTemperaturesInDegreeCelsius_ = emptyFloatList();
        bitField0_ = (bitField0_ & ~0x00000004);
        onChanged();
        return this;
      }

      private FieldThermometer.MeasuredTemperatures.DeviceError lastRecordedDeviceError_;
      private com.google.protobuf.SingleFieldBuilderV3<
          FieldThermometer.MeasuredTemperatures.DeviceError, FieldThermometer.MeasuredTemperatures.DeviceError.Builder, FieldThermometer.MeasuredTemperatures.DeviceErrorOrBuilder> lastRecordedDeviceErrorBuilder_;
      /**
       * <code>optional .MeasuredTemperatures.DeviceError lastRecordedDeviceError = 4;</code>
       * @return Whether the lastRecordedDeviceError field is set.
       */
      public boolean hasLastRecordedDeviceError() {
        return ((bitField0_ & 0x00000008) != 0);
      }
      /**
       * <code>optional .MeasuredTemperatures.DeviceError lastRecordedDeviceError = 4;</code>
       * @return The lastRecordedDeviceError.
       */
      public FieldThermometer.MeasuredTemperatures.DeviceError getLastRecordedDeviceError() {
        if (lastRecordedDeviceErrorBuilder_ == null) {
          return lastRecordedDeviceError_ == null ? FieldThermometer.MeasuredTemperatures.DeviceError.getDefaultInstance() : lastRecordedDeviceError_;
        } else {
          return lastRecordedDeviceErrorBuilder_.getMessage();
        }
      }
      /**
       * <code>optional .MeasuredTemperatures.DeviceError lastRecordedDeviceError = 4;</code>
       */
      public Builder setLastRecordedDeviceError(FieldThermometer.MeasuredTemperatures.DeviceError value) {
        if (lastRecordedDeviceErrorBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          lastRecordedDeviceError_ = value;
        } else {
          lastRecordedDeviceErrorBuilder_.setMessage(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional .MeasuredTemperatures.DeviceError lastRecordedDeviceError = 4;</code>
       */
      public Builder setLastRecordedDeviceError(
          FieldThermometer.MeasuredTemperatures.DeviceError.Builder builderForValue) {
        if (lastRecordedDeviceErrorBuilder_ == null) {
          lastRecordedDeviceError_ = builderForValue.build();
        } else {
          lastRecordedDeviceErrorBuilder_.setMessage(builderForValue.build());
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional .MeasuredTemperatures.DeviceError lastRecordedDeviceError = 4;</code>
       */
      public Builder mergeLastRecordedDeviceError(FieldThermometer.MeasuredTemperatures.DeviceError value) {
        if (lastRecordedDeviceErrorBuilder_ == null) {
          if (((bitField0_ & 0x00000008) != 0) &&
            lastRecordedDeviceError_ != null &&
            lastRecordedDeviceError_ != FieldThermometer.MeasuredTemperatures.DeviceError.getDefaultInstance()) {
            getLastRecordedDeviceErrorBuilder().mergeFrom(value);
          } else {
            lastRecordedDeviceError_ = value;
          }
        } else {
          lastRecordedDeviceErrorBuilder_.mergeFrom(value);
        }
        bitField0_ |= 0x00000008;
        onChanged();
        return this;
      }
      /**
       * <code>optional .MeasuredTemperatures.DeviceError lastRecordedDeviceError = 4;</code>
       */
      public Builder clearLastRecordedDeviceError() {
        bitField0_ = (bitField0_ & ~0x00000008);
        lastRecordedDeviceError_ = null;
        if (lastRecordedDeviceErrorBuilder_ != null) {
          lastRecordedDeviceErrorBuilder_.dispose();
          lastRecordedDeviceErrorBuilder_ = null;
        }
        onChanged();
        return this;
      }
      /**
       * <code>optional .MeasuredTemperatures.DeviceError lastRecordedDeviceError = 4;</code>
       */
      public FieldThermometer.MeasuredTemperatures.DeviceError.Builder getLastRecordedDeviceErrorBuilder() {
        bitField0_ |= 0x00000008;
        onChanged();
        return getLastRecordedDeviceErrorFieldBuilder().getBuilder();
      }
      /**
       * <code>optional .MeasuredTemperatures.DeviceError lastRecordedDeviceError = 4;</code>
       */
      public FieldThermometer.MeasuredTemperatures.DeviceErrorOrBuilder getLastRecordedDeviceErrorOrBuilder() {
        if (lastRecordedDeviceErrorBuilder_ != null) {
          return lastRecordedDeviceErrorBuilder_.getMessageOrBuilder();
        } else {
          return lastRecordedDeviceError_ == null ?
              FieldThermometer.MeasuredTemperatures.DeviceError.getDefaultInstance() : lastRecordedDeviceError_;
        }
      }
      /**
       * <code>optional .MeasuredTemperatures.DeviceError lastRecordedDeviceError = 4;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          FieldThermometer.MeasuredTemperatures.DeviceError, FieldThermometer.MeasuredTemperatures.DeviceError.Builder, FieldThermometer.MeasuredTemperatures.DeviceErrorOrBuilder> 
          getLastRecordedDeviceErrorFieldBuilder() {
        if (lastRecordedDeviceErrorBuilder_ == null) {
          lastRecordedDeviceErrorBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              FieldThermometer.MeasuredTemperatures.DeviceError, FieldThermometer.MeasuredTemperatures.DeviceError.Builder, FieldThermometer.MeasuredTemperatures.DeviceErrorOrBuilder>(
                  getLastRecordedDeviceError(),
                  getParentForChildren(),
                  isClean());
          lastRecordedDeviceError_ = null;
        }
        return lastRecordedDeviceErrorBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFields(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:MeasuredTemperatures)
    }

    // @@protoc_insertion_point(class_scope:MeasuredTemperatures)
    private static final FieldThermometer.MeasuredTemperatures DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new FieldThermometer.MeasuredTemperatures();
    }

    public static FieldThermometer.MeasuredTemperatures getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<MeasuredTemperatures>
        PARSER = new com.google.protobuf.AbstractParser<MeasuredTemperatures>() {
      @java.lang.Override
      public MeasuredTemperatures parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        Builder builder = newBuilder();
        try {
          builder.mergeFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(builder.buildPartial());
        } catch (com.google.protobuf.UninitializedMessageException e) {
          throw e.asInvalidProtocolBufferException().setUnfinishedMessage(builder.buildPartial());
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(e)
              .setUnfinishedMessage(builder.buildPartial());
        }
        return builder.buildPartial();
      }
    };

    public static com.google.protobuf.Parser<MeasuredTemperatures> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<MeasuredTemperatures> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public FieldThermometer.MeasuredTemperatures getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MeasuredTemperatures_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MeasuredTemperatures_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_MeasuredTemperatures_DeviceError_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_MeasuredTemperatures_DeviceError_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\026FieldThermometer.proto\"\251\003\n\024MeasuredTem" +
      "peratures\022\037\n\022fieldThermometerId\030\001 \001(\003H\000\210" +
      "\001\001\022C\n\017measurementType\030\002 \001(\0162%.MeasuredTe" +
      "mperatures.MeasurementTypeH\001\210\001\001\022+\n#measu" +
      "redTemperaturesInDegreeCelsius\030\003 \003(\002\022G\n\027" +
      "lastRecordedDeviceError\030\004 \001(\0132!.Measured" +
      "Temperatures.DeviceErrorH\002\210\001\001\032/\n\013DeviceE" +
      "rror\022\024\n\007message\030\001 \001(\tH\000\210\001\001B\n\n\010_message\"=" +
      "\n\017MeasurementType\022\014\n\010PERIODIC\020\000\022\r\n\tREQUE" +
      "STED\020\001\022\r\n\tEXTREMITY\020\002B\025\n\023_fieldThermomet" +
      "erIdB\022\n\020_measurementTypeB\032\n\030_lastRecorde" +
      "dDeviceErrorb\006proto3"
    };
    descriptor = com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
        });
    internal_static_MeasuredTemperatures_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_MeasuredTemperatures_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MeasuredTemperatures_descriptor,
        new java.lang.String[] { "FieldThermometerId", "MeasurementType", "MeasuredTemperaturesInDegreeCelsius", "LastRecordedDeviceError", "FieldThermometerId", "MeasurementType", "LastRecordedDeviceError", });
    internal_static_MeasuredTemperatures_DeviceError_descriptor =
      internal_static_MeasuredTemperatures_descriptor.getNestedTypes().get(0);
    internal_static_MeasuredTemperatures_DeviceError_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_MeasuredTemperatures_DeviceError_descriptor,
        new java.lang.String[] { "Message", "Message", });
  }

  // @@protoc_insertion_point(outer_class_scope)
}
